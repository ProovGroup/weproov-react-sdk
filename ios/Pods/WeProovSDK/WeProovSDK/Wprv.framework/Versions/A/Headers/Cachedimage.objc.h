// Objective-C API for talking to bitbucket.org/weproov/weproovstrucgo/cachedimage Go package.
//   gobind -lang=objc bitbucket.org/weproov/weproovstrucgo/cachedimage
//
// File is generated by gobind. Do not edit.

#ifndef __Cachedimage_H__
#define __Cachedimage_H__

@import Foundation;
#include "Universe.objc.h"


@class CachedimageStruct;
@protocol CachedimageDelegate;
@class CachedimageDelegate;

@protocol CachedimageDelegate <NSObject>
- (void)onCachedImageError:(NSError*)err;
- (void)onCachedImageSuccess:(long)id_ path:(NSString*)path;
@end

/**
 * 	structure de la reponce de l'api
 */
@interface CachedimageStruct : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
/**
 * 		id de l image dans la bdd
 */
- (long)id_;
- (void)setId:(long)v;
/**
 * 		le type image/jpeg | image/png
 */
- (NSString*)contentType;
- (void)setContentType:(NSString*)v;
/**
 * 		sa valeur md5
 */
- (NSString*)md5;
- (void)setMd5:(NSString*)v;
/**
 * 		la data encoder en base64
 */
- (NSString*)data;
- (void)setData:(NSString*)v;
- (NSString*)path;
- (void)setPath:(NSString*)v;
/**
 * 	permet de transformer la data de base64 a un []byte
 */
- (NSData*)getDatas;
@end

/**
 * 	recupere un cached image depuis l'api
	de facons asynchrone
 */
FOUNDATION_EXPORT void CachedimageGet(long id_, id<CachedimageDelegate> delegate);

/**
 * 	permet de recuperer une data d'une image directement
 */
FOUNDATION_EXPORT NSData* CachedimageGetCache(long id_);

/**
 * 	recuperer le path dans le cache d'une image
 */
FOUNDATION_EXPORT NSString* CachedimageGetPath(long id_);

/**
 * 	recuperer le path dans le cache d'une image
 */
FOUNDATION_EXPORT NSString* CachedimageGetPathThumb(long id_);

/**
 * 	recupere un cached image depuis l'api
	de facons synchrone
 */
FOUNDATION_EXPORT CachedimageStruct* CachedimageGetSync(long id_, NSError** error);

/**
 * 	recupere un cached image depuis l'api
	de fa√ßons asynchrone
 */
FOUNDATION_EXPORT void CachedimageGetThumb(long id_, id<CachedimageDelegate> delegate);

/**
 * 	enregistre dans le cache le l'image au format fichier
 */
FOUNDATION_EXPORT NSString* CachedimageSetCache(CachedimageStruct* img);

@class CachedimageDelegate;

/**
 * 	Delegate
	protocole de reponce
	OnCachedImageError prend en paramatre une erreur
	OnCachedImageSuccess prend en parametre un path ver la photos demander
 */
@interface CachedimageDelegate : NSObject <goSeqRefInterface, CachedimageDelegate> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onCachedImageError:(NSError*)err;
- (void)onCachedImageSuccess:(long)id_ path:(NSString*)path;
@end

#endif
