// Objective-C API for talking to bitbucket.org/weproov/weproovstrucgo/rights Go package.
//   gobind -lang=objc bitbucket.org/weproov/weproovstrucgo/rights
//
// File is generated by gobind. Do not edit.

#ifndef __Rights_H__
#define __Rights_H__

@import Foundation;
#include "Universe.objc.h"


@class RightsMsgInApp;
@class RightsOption;
@class RightsRightCreateResponce;
@class RightsStruct;
@class RightsSubscription;
@protocol RightsPurchaseDelegate;
@class RightsPurchaseDelegate;
@protocol RightsRightDelegate;
@class RightsRightDelegate;

@protocol RightsPurchaseDelegate <NSObject>
- (void)onPurchaseAllready;
- (void)onPurchaseError:(NSError*)err;
- (void)onPurchaseSuccess;
@end

@protocol RightsRightDelegate <NSObject>
- (void)onHaveRightToCreate;
- (void)onRightError:(NSError*)p0;
- (void)onRightPaymentNeeded;
@end

@interface RightsMsgInApp : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSString*)platform;
- (void)setPlatform:(NSString*)v;
- (NSString*)productId;
- (void)setProductId:(NSString*)v;
- (NSString*)receipt;
- (void)setReceipt:(NSString*)v;
- (NSString*)transactionId;
- (void)setTransactionId:(NSString*)v;
@end

@interface RightsOption : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (long)id_;
- (void)setId:(long)v;
- (long)userId;
- (void)setUserId:(long)v;
// skipped field Option.Credit with unsupported type: *types.Pointer

- (long)used;
- (void)setUsed:(long)v;
- (NSString*)code;
- (void)setCode:(NSString*)v;
- (NSString*)source;
- (void)setSource:(NSString*)v;
- (BOOL)boolean;
- (void)setBoolean:(BOOL)v;
- (BOOL)disable;
- (void)setDisable:(BOOL)v;
// skipped field Option.SubsciptionId with unsupported type: *types.Pointer

@end

@interface RightsRightCreateResponce : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (BOOL)right;
- (void)setRight:(BOOL)v;
@end

@interface RightsStruct : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
/**
 * 		id de l'utilisateur
 */
- (long)id_;
- (void)setId:(long)v;
/**
 * 		Prenom de l'utilisateur
 */
- (NSString*)firstName;
- (void)setFirstName:(NSString*)v;
/**
 * 		Nom de l'utilisateur
 */
- (NSString*)lastName;
- (void)setLastName:(NSString*)v;
/**
 * 		Email de l'utilisateur
 */
- (NSString*)email;
- (void)setEmail:(NSString*)v;
/**
 * 		subscription id
 */
- (long)subscriptionId;
- (void)setSubscriptionId:(long)v;
// skipped field Struct.Credits with unsupported type: *types.Named

/**
 * 		Permet de bloquer l'utilisateur
 */
- (BOOL)active;
- (void)setActive:(BOOL)v;
/**
 * 		Permet de s'avoir si un utilisateur doit etre synchroniser
		avec sa platform
 */
- (BOOL)needSync;
- (void)setNeedSync:(BOOL)v;
/**
 * 		Permet de s'avoir si un utilisateur a access au plans de test
 */
- (BOOL)accessTest;
- (void)setAccessTest:(BOOL)v;
// skipped field Struct.Subscription with unsupported type: *types.Named

- (long)getDayEndTrial;
- (long)getFullCredits;
- (long)getMonthlyWeproovs;
- (long)getPermCredits;
- (NSString*)getPermName;
/**
 * 	HaveRightToCreate
	sert a verifier si le compte a
	le drois de ceer un rapport a partire d'un template
 */
- (void)haveRightToCreate:(id<RightsRightDelegate>)delegate;
- (BOOL)haveRightToCreateSync:(BOOL*)ret0_ error:(NSError**)error;
- (BOOL)isLimitedPro;
- (BOOL)isPremium;
/**
 * 	Lis une JSON string pour en extraire les droit
 */
- (BOOL)reloadFromString:(NSString*)value;
/**
 * 	Sauvgarde dans la bdd sur le device l'utilisateur
 */
- (void)saveLocal;
- (long)state;
- (BOOL)unlimitedReports;
- (void)useCredis;
- (BOOL)wasInTrial;
@end

@interface RightsSubscription : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (long)id_;
- (void)setId:(long)v;
- (NSString*)platform;
- (void)setPlatform:(NSString*)v;
- (BOOL)isTrial;
- (void)setIsTrial:(BOOL)v;
- (NSString*)reference;
- (void)setReference:(NSString*)v;
- (NSString*)name;
- (void)setName:(NSString*)v;
- (long)userId;
- (void)setUserId:(long)v;
// skipped field Subscription.Start with unsupported type: *types.Named

// skipped field Subscription.End with unsupported type: *types.Named

// skipped field Subscription.Options with unsupported type: *types.Named

// skipped field Subscription.CacheControl with unsupported type: *types.Pointer

@end

FOUNDATION_EXPORT NSString* const RightsCURRENT_RIGHT_KEY;
FOUNDATION_EXPORT const int64_t RightsPREMIUM;
FOUNDATION_EXPORT const int64_t RightsREGULAR;
FOUNDATION_EXPORT const int64_t RightsTRIAL;
FOUNDATION_EXPORT const int64_t RightsTRIALEXPIRED;

@interface Rights : NSObject
// skipped variable Current with unsupported type: *types.Named

@end

/**
 * 	permet de recuperer les droits
 */
FOUNDATION_EXPORT RightsStruct* RightsGetCurrent(void);

/**
 * 	Lancer au a l'initialisation
	permet de recuperer les dernier Droits Recupperer

	appeler a partire de la library
 */
FOUNDATION_EXPORT void RightsInitRight(void);

FOUNDATION_EXPORT void RightsPurchase(NSString* productId, NSString* receipt, NSString* transactionId, id<RightsPurchaseDelegate> delegate);

FOUNDATION_EXPORT BOOL RightsPurchaseSync(NSString* productId, NSString* receipt, NSString* transactionId, NSError** error);

FOUNDATION_EXPORT BOOL RightsRefreshRight(NSError** error);

@class RightsPurchaseDelegate;

@class RightsRightDelegate;

@interface RightsPurchaseDelegate : NSObject <goSeqRefInterface, RightsPurchaseDelegate> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onPurchaseAllready;
- (void)onPurchaseError:(NSError*)err;
- (void)onPurchaseSuccess;
@end

@interface RightsRightDelegate : NSObject <goSeqRefInterface, RightsRightDelegate> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onHaveRightToCreate;
- (void)onRightError:(NSError*)p0;
- (void)onRightPaymentNeeded;
@end

#endif
