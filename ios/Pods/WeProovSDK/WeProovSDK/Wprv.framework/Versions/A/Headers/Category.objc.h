// Objective-C API for talking to bitbucket.org/weproov/weproovstrucgo/category Go package.
//   gobind -lang=objc bitbucket.org/weproov/weproovstrucgo/category
//
// File is generated by gobind. Do not edit.

#ifndef __Category_H__
#define __Category_H__

@import Foundation;
#include "Universe.objc.h"

#include "Cachedimage.objc.h"
#include "Templates.objc.h"
#include "Translations.objc.h"

@class CategoryStruct;
@protocol CategoryCallback;
@class CategoryCallback;
@protocol CategoryDelegate;
@class CategoryDelegate;

@protocol CategoryCallback <NSObject>
- (void)onError:(NSError*)p0;
- (void)onSuccess:(NSString*)p0;
@end

@protocol CategoryDelegate <NSObject>
- (void)onCategoryError:(NSError*)p0;
- (void)onCategorySuccess;
@end

@interface CategoryStruct : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
/**
 * 		Id correspond a l'id de la category
 */
- (long)id_;
- (void)setId:(long)v;
/**
 * 		/!\ deprecier
		Type Correspond au type de la category
		typiquement seras la valeur du parent
		mais peut etre aussi part | item qu corespond au deux grande
		category cette facons de marcher tant quand meme a disparetre donc ne pas si fier
 */
- (NSString*)type;
- (void)setType:(NSString*)v;
/**
 * 		Value coresond au nom de dev que lon peut lui donner exemple
		car | break | ...

		/!\ deprecier
		si il y a une sous category la valeur sera utiliser comme type
		Tant quand meme a disparetre donc ne pas si fier
 */
- (NSString*)value;
- (void)setValue:(NSString*)v;
/**
 * 		Title est l'id corespondant dans la table Translate
 */
- (long)title;
- (void)setTitle:(long)v;
/**
 * 		CachedId correspond a l image de la category
 */
- (long)cachedId;
- (void)setCachedId:(long)v;
// skipped field Struct.TitleTr with unsupported type: *types.Named

/**
 * 		ParentId correspond a l'id de l'object parent
		qui lui meme seras une category.

		il peut etre null
 */
- (long)parentId;
- (void)setParentId:(long)v;
// skipped field Struct.Subcategory with unsupported type: *types.Slice

// skipped field Struct.TemplateIds with unsupported type: *types.Slice

/**
 * True if the contents of the items are the same or false if they are different.
 */
- (BOOL)equalsObject:(CategoryStruct*)newObj;
/**
 * 	Permet de recuperer une image de facons async
 */
- (void)getImage:(id<CachedimageDelegate>)delegate;
/**
 * 	permert de recuperer la sous-categorie grace a son index l'index dans le tableau
 */
- (CategoryStruct*)getSubCategory:(long)num;
/**
 * 	Retourn le template par raport a son index dans le tableau
 */
- (TemplatesTemplate*)getTemplate:(long)num;
/**
 * 	Renvoie la traduction du title de la category
	avec comme lang cell set dans les configuration
 */
- (NSString*)getTr;
/**
 * 	permert de recuperer l'index dans le tableau de la sous-categorie
 */
- (long)indexOf:(CategoryStruct*)c;
/**
 * 	renvoie le compte de sous categorie presente dans la categorie
 */
- (long)subCategoryCount;
/**
 * 	Renvoie le nombre de template dans une sous categorie
 */
- (long)templateCount;
@end

/**
 * 		CURRENT_TEMPLATE_LIST_KEY correspond a la clee qui Stock le dernier resulat
		celui si seras charger au prochain lancement pour demarer plus vite
 */
FOUNDATION_EXPORT NSString* const CategoryCURRENT_TEMPLATE_LIST_KEY;

@interface Category : NSObject
// skipped variable Cats with unsupported type: *types.Slice

@end

/**
 * 	Renvoi le nombre de 'Master' category
 */
FOUNDATION_EXPORT long CategoryCategoryCount(void);

/**
 * 	Renvoi la category d'on la position dans la list est num
 */
FOUNDATION_EXPORT CategoryStruct* CategoryGet(long num);

/**
 * 	fait appele a GetImageSync a partire d'une goroutine
 */
FOUNDATION_EXPORT void CategoryGetImage(long id_, id<CategoryCallback> callback);

/**
 * 	permet de recuperer une image d'une categorie de facons synchrone
	grace a sont id la fonction pourais etre simplifier
	par l'ajout d'une route sur les api
 */
FOUNDATION_EXPORT NSString* CategoryGetImageSync(long id_, NSError** error);

FOUNDATION_EXPORT long CategoryIndexOf(CategoryStruct* c);

/**
 * 	Rafrechie de facons a ne pas bloquer
	un delegate est a fournire pour signaler que tout est terminer
 */
FOUNDATION_EXPORT void CategoryRefresh(id<CategoryDelegate> delegate);

// skipped function RefreshSync with unsupported parameter or return types


@class CategoryCallback;

@class CategoryDelegate;

@interface CategoryCallback : NSObject <goSeqRefInterface, CategoryCallback> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onError:(NSError*)p0;
- (void)onSuccess:(NSString*)p0;
@end

@interface CategoryDelegate : NSObject <goSeqRefInterface, CategoryDelegate> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onCategoryError:(NSError*)p0;
- (void)onCategorySuccess;
@end

#endif
