// Objective-C API for talking to bitbucket.org/weproov/weproovstrucgo/wperr Go package.
//   gobind -lang=objc bitbucket.org/weproov/weproovstrucgo/wperr
//
// File is generated by gobind. Do not edit.

#ifndef __Wperr_H__
#define __Wperr_H__

@import Foundation;
#include "Universe.objc.h"


@class WperrWperror;
@class WperrWperrors;

/**
 * error retourner
"responce.read.error.not_possible"
"api.unknow.error"
 */
@interface WperrWperror : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (long)code;
- (void)setCode:(long)v;
- (NSString*)type;
- (void)setType:(NSString*)v;
- (NSString*)message;
- (void)setMessage:(NSString*)v;
- (long)timestamp;
- (void)setTimestamp:(long)v;
@end

@interface WperrWperrors : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (long)status;
- (void)setStatus:(long)v;
// skipped field Wperrors.Errors with unsupported type: *types.Slice

- (long)timestamp;
- (void)setTimestamp:(long)v;
/**
 * 	Error() permet de correspondre au format golang des
	erreur.
	elle renvoy la string qui seras utiliser dans les app/service pour pouvoirs
	choisir les traduction le type de l'errer
 */
- (NSString*)error;
/**
 * 	Message permet de recuperrer le message de l'error
 */
- (NSString*)message;
/**
 * 	Error() permet de correspondre au format golang des
	erreur.
	elle renvoy la string qui seras utiliser dans les app/service pour pouvoirs
	choisir les traduction le type de l'errer
 */
- (NSString*)row;
@end

/**
 * 	Permet de lire les Erreur transmise par l'api

	retourne un erreur generique qui a ete creer par
	une WpErrors

	status int: Code retourner par la requette http
	body string: le corp de la requette
 */
FOUNDATION_EXPORT BOOL WperrFromHttp(long status, NSData* body, NSError** error);

FOUNDATION_EXPORT WperrWperrors* WperrGetWpErrors(NSError* e);

FOUNDATION_EXPORT BOOL WperrIsAllreadyRegister(NSError* e);

FOUNDATION_EXPORT BOOL WperrIsMailError(NSError* e);

FOUNDATION_EXPORT BOOL WperrIsNetworkError(NSError* e);

FOUNDATION_EXPORT BOOL WperrIsPasswordError(NSError* e);

FOUNDATION_EXPORT BOOL WperrIsTrErrors(NSError* e);

// skipped function IsWpErrors with unsupported parameter or return types


/**
 * 	Creer une nouvelle WpErrors

	code int: le code coresspedant au status et aut code error
	Type string: seras la clee qui va me permetre de choisire une traduction
	message string: le message qui est destiner au developeur tombans sur cette error
 */
FOUNDATION_EXPORT BOOL WperrNewErrors(long code, NSString* Type, NSString* message, NSError** error);

/**
 * 	Creer une nouvelle WpErrors

	code int: le code coresspedant au status et aut code error
	Type string: seras la clee qui va me permetre de choisire une traduction
	message string: le message qui est destiner au developeur tombans sur cette error
 */
FOUNDATION_EXPORT BOOL WperrNewSErrors(NSString* message, NSError** error);

FOUNDATION_EXPORT void WperrSendErrorToSentry(NSError* e);

#endif
