// Objective-C API for talking to bitbucket.org/weproov/weproovstrucgo/mission Go package.
//   gobind -lang=objc bitbucket.org/weproov/weproovstrucgo/mission
//
// File is generated by gobind. Do not edit.

#ifndef __Mission_H__
#define __Mission_H__

@import Foundation;
#include "Universe.objc.h"

#include "Cachedimage.objc.h"
#include "Fscache.objc.h"
#include "Geoloc.objc.h"
#include "Items.objc.h"
#include "Proover.objc.h"
#include "Pulldownload.objc.h"
#include "Report.objc.h"
#include "S3image.objc.h"
#include "Translations.objc.h"
#include "User.objc.h"

@class MissionList;
@class MissionOwnerInfoStruct;
@class MissionStruct;
@protocol MissionListDelegate;
@class MissionListDelegate;

@protocol MissionListDelegate <NSObject>
- (void)onMissionFindError:(NSError*)err;
- (void)onMissionFindSuccess:(MissionList*)list;
@end

@interface MissionList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSString*)find;
- (void)setFind:(NSString*)v;
- (long)offset;
- (void)setOffset:(long)v;
- (long)limit;
- (void)setLimit:(long)v;
- (BOOL)haveMore;
- (void)setHaveMore:(BOOL)v;
// skipped field List.Result with unsupported type: *types.Slice

- (long)count;
- (MissionStruct*)get:(long)num;
- (void)next:(id<MissionListDelegate>)delegate;
@end

@interface MissionOwnerInfoStruct : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSString*)firstName;
- (void)setFirstName:(NSString*)v;
- (NSString*)lastName;
- (void)setLastName:(NSString*)v;
- (NSString*)email;
- (void)setEmail:(NSString*)v;
- (NSString*)cell;
- (void)setCell:(NSString*)v;
@end

@interface MissionStruct : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (long)id_;
- (void)setId:(long)v;
- (NSString*)email;
- (void)setEmail:(NSString*)v;
- (NSString*)proovCode;
- (void)setProovCode:(NSString*)v;
- (NSString*)title;
- (void)setTitle:(NSString*)v;
- (NSString*)description;
- (void)setDescription:(NSString*)v;
- (GeolocStruct*)geoloc;
- (void)setGeoloc:(GeolocStruct*)v;
- (long)owner;
- (void)setOwner:(long)v;
- (ReportStruct*)report;
- (void)setReport:(ReportStruct*)v;
- (long)userLogo;
- (void)setUserLogo:(long)v;
- (UserStruct*)ownerInfos;
- (void)setOwnerInfos:(UserStruct*)v;
- (UserStruct*)receivedInfos;
- (void)setReceivedInfos:(UserStruct*)v;
// skipped field Struct.DueDate with unsupported type: *types.Named

// skipped field Struct.StartDate with unsupported type: *types.Named

- (void)downloadPictureMission:(id<CachedimageDelegate>)delegate;
- (int64_t)getDueDateUnix;
- (NSString*)getReportTr;
- (int64_t)getStartDateUnix;
- (BOOL)haveLogo;
- (NSString*)toJson;
@end

FOUNDATION_EXPORT MissionStruct* MissionFromJson(NSString* data, NSError** error);

FOUNDATION_EXPORT void MissionGetList(NSString* mType, long offset, long limit, id<MissionListDelegate> delegate);

FOUNDATION_EXPORT MissionList* MissionGetListSync(NSString* mType, long offset, long limit, NSError** error);

@class MissionListDelegate;

@interface MissionListDelegate : NSObject <goSeqRefInterface, MissionListDelegate> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onMissionFindError:(NSError*)err;
- (void)onMissionFindSuccess:(MissionList*)list;
@end

#endif
